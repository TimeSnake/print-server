image: gradle:alpine

before_script:
  - export GRADLE_USER_HOME="$(pwd)/.gradle"
  - mkdir -p $GRADLE_USER_HOME
  - touch $GRADLE_USER_HOME/gradle.properties
  - echo "timesnakeTokenType=Job-Token" >> $GRADLE_USER_HOME/gradle.properties
  - echo "timesnakeUser=gitlab-ci-token" >> $GRADLE_USER_HOME/gradle.properties
  - echo "timesnakePassword=$CI_JOB_TOKEN" >> $GRADLE_USER_HOME/gradle.properties
  - echo "timesnakeDeployUser=$CI_DEPLOY_USER" >> $GRADLE_USER_HOME/gradle.properties
  - echo "timesnakeDeployKey=$CI_DEPLOY_PASSWORD" >> $GRADLE_USER_HOME/gradle.properties


variables:
  GIT_STRATEGY: fetch
  GIT_FETCH_EXTRA_FLAGS: --tags

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

stages:
  - build
  - deploy

build:
  stage: build
  script: gradle --build-cache bootJar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  tags:
    - gradle


publish:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - gradle publish
  tags:
    - gradle


release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: publish
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Creating release $CI_COMMIT_TAG"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: release_notes.md
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        -
